@model Seaboard.Intranet.Domain.InterestHeader
@{
    Layout = "~/Views/Shared/_BillingLayout.cshtml";
    int preliminar = (int)ViewBag.Preliminar;
    int type = (int)ViewBag.Type;
    string typeDescription;
    decimal total = ViewBag.Total;

    if (type == 0)
    {
        typeDescription = "Calculo de intereses SPOT";
    }
    else
    {
        typeDescription = "Calculo de intereses Contrato";
    }

    if (preliminar == 0)
    {
        typeDescription += " preliminar";
    }
    else
    {
         typeDescription += " definitivo";
    }

    ViewBag.Title = typeDescription;
}

<style>
    .selected {
        background-color: #e0f3ff;
    }

    .notAvailable {
        background-color: #f5efb5;
    }
</style>

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>@typeDescription</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home")">Inicio</a>
            </li>
            <li>
                <a href="@Url.Action("InterestIndex", "AccountReceivables", new { type = preliminar})">Listado de calculos de intereses</a>
            </li>
            <li class="active">
                <strong>@typeDescription</strong>
            </li>
        </ol>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins" id="buttonPanel">
                <div class="ibox-title">
                    <h3>@typeDescription</h3>
                </div>
                <div class="ibox-content">
                    <div class="form-group">
                        <div class="col-sm-12 col-sm-offset-1">
                            @if (!Model.Posted)
                            {
                                <button class="btn btn-white" type="button" onclick="contabilizar();"><i class="fa fa-money"></i> Someter</button>
                                <button class="btn btn-info" type="button" onclick="guardar();"><i class="fa fa-save"></i> Guardar</button>
                                <button class="btn btn-success" type="button" onclick="actualizar();"><i class="fa fa-refresh"></i> Actualizar</button>
                                <button class="btn btn-success" type="button" onclick="calcular();"><i class="fa fa-calculator"></i> Calcular</button>
                                <button class="btn btn-warning" type="button" onclick="eliminar();"><i class="fa fa-remove"></i> Eliminar</button>
                            }
                            else
	                        {
                                <button class="btn btn-warning" type="button" onclick="anular();"><i class="fa fa-remove"></i> Anular</button>
	                        }
                            <button class="btn btn-primary" type="button" data-toggle="modal" data-target="#modal-Print" id="btn-print"><i class="fa fa-print"></i> Imprimir</button>
                        </div>
                    </div>
                    <br />
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins" id="headerPanel">
                <div class="ibox-content">
                    <fieldset class="form-horizontal">
                        <div class="row">
                            <div class="col-sm-3">
                                <div class="form-group">
                                    <label class="col-sm-5 control-label">Id. de Lote:</label>
                                    <div class="col-sm-7 input-group">
                                        @Html.TextBoxFor(m => m.BatchNumber, new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="col-sm-2 control-label">Descripción:</label>
                                    <div class="col-sm-10 input-group">
                                        @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-3 text-center">
                                <div class="form-group">
                                    @if (preliminar == 0)
                                    {
                                        <h2 class="font-bold">
                                            PRELIMINAR
                                        </h2>
                                    }
                                    else
                                    {
                                        <h2 class="font-bold">
                                            DEFINITIVO
                                        </h2>
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-sm-3">
                                <div class="form-group">
                                    <label class="col-sm-5 control-label">Fecha de corte:</label>
                                    <div class="col-sm-7 input-group date">
                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                        @Html.TextBoxFor(m => m.CutDate, new { @class = "form-control", Value = Model.CutDate.ToString("dd/MM/yyyy") })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group date">
                                    <label class="col-sm-4 control-label">Fecha busqueda:</label>
                                    <div class="col-sm-8 input-group date">
                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                        @Html.TextBoxFor(m => m.SearchDate, new { @class = "form-control", Value = Model.SearchDate.ToString("dd/MM/yyyy") })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group date">
                                    <label class="col-sm-4 control-label">Mes facturación:</label>
                                    <div class="col-sm-8 input-group date">
                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                        @Html.TextBoxFor(m => m.BillingMonth, new { @class = "form-control", Value = Model.BillingMonth.ToString("MM/yyyy") })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    &nbsp;
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group date">
                                    <label class="col-sm-5 control-label">Fecha de documento:</label>
                                    <div class="col-sm-7 input-group date">
                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                        @Html.TextBoxFor(m => m.DocumentDate, new { @class = "form-control", Value = Model.DocumentDate.ToString("dd/MM/yyyy") })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    @if (type == 0)
                                    {
                                        <label class="col-sm-4 control-label">Tasa interes:</label>
                                        <div class="col-sm-8 input-group">
                                            @Html.TextBoxFor(m => m.InterestRate, new { @class = "form-control" })
                                            <span class="input-group-btn">
                                                <button onclick="getInterestRate();" type="button" class="btn btn-success">
                                                    <i class="fa fa-cloud-download"></i>
                                                </button>
                                            </span>
                                        </div>
                                    }
                                    else
                                    {
                                        @Html.Hidden("InterestRate", 0)
                                    }
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    @if (type == 0)
                                    {
                                        <label class="col-sm-4 control-label">Recargo:</label>
                                        <div class="col-sm-8 input-group">
                                            @Html.TextBoxFor(m => m.Charge, new { @class = "form-control", Value = Model.Charge })
                                        </div>
                                    }
                                    else
                                    {
                                        @Html.Hidden("Charge", 0)
                                    }
                                </div>
                            </div>

                            <div class="col-md-1">
                                <div class="form-group">
                                    &nbsp;
                                </div>
                            </div>

                            <div class="col-md-2 col-lg-offset-0">
                                <div class="form-group text-center">
                                    <div class="ibox">
                                        <h5>Total General</h5>
                                        <div class="ibox-content">
                                            <h3 id="total" class="font-bold">
                                                @total.ToString("N2")
                                            </h3>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-3">
            <div class="ibox">
                <div class="ibox-title">
                    <h5>Clientes</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>

                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>

                <div class="ibox-content">
                    <div class="row" id="customerRows">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th style="width:15%">Excluir</th>
                                    <th style="width:35%">Id. de cliente</th>
                                    <th style="width:40%">Total Intereses</th>
                                </tr>
                            </thead>

                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-9">
            <div class="ibox">
                <div class="ibox-title">
                    <h5>Lineas</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>

                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>

                <div class="ibox-content">
                    <div class="row table-responsive" id="itemRows">
                        <table class="table table-stripped table-bordered informationTable" id="itemTable">
                            <thead>
                                <tr>
                                    <th style="width:3%">#</th>
                                    <th style="width:3%">Excluir</th>
                                    <th style="width:8%">Documento</th>
                                    <th style="width:8%">Monto</th>
                                    <th style="width:8%">Bal. anterior</th>
                                    <th style="width:8%">Bal. pendiente</th>
                                    <th style="width:8%">Fecha limite</th>
                                    <th style="width:8%">Fecha corte</th>
                                    <th style="width:6%">Dias</th>
                                    <th style="width:4%">Tasa Interes</th>
                                    <th style="width:8%">Interes</th>
                                    <th style="width:4%">Tasa Recargo</th>
                                    <th style="width:8%">Recargo</th>
                                    <th style="width:9%">Total</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="modal-Print" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="myModalLabel">Imprimir</h4>
                </div>

                <div class="modal-body">
                    <p>Imprimir reporte</p>
                    <div class="form-group">
                        <label>Opción</label>
                        <select class="form-control" id="printOption" name="printOption">
                            <option value="10">PDF</option>
                            <option value="20">Excel</option>
                        </select>
                    </div>
                </div>

                <div class="modal-footer">
                    <div class="form-actions no-color">
                        <button type="button" class="btn btn-primary" onclick="imprimir();"> Imprimir</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="modal-InvoiceApply" class="modal inmodal fadeIn" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" style="width: 1300px;">
            <div class="modal-content animated fadeIn">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="myModalLabel">Detalle de pagos</h4>
                </div>

                <div class="modal-body">
                    <div class="table-responsive" style="height:400px;overflow:auto" id="invoiceRows"></div>
                </div>
                <div class="modal-footer">
                    <div class="form-actions no-color">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/plugins/toastrStyles")
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/plugins/sweetAlertStyles")
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    <link href="@Url.Content("~/Content/plugins/lookupbox/lookupbox.css")" rel="stylesheet" type="text/css" />
}

@section Scripts {
    @Scripts.Render("~/Scripts/plugins/jquery-ui/jquery-ui.min.js")
    @Scripts.Render("~/plugins/toastr")
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/sweetAlert")
    @Scripts.Render("~/Scripts/plugins/lookupbox/jquery.lookupbox.js")

    <script type="text/javascript">
        var value = "";
        $(document).ready(function () {
            $('.informationTable').DataTable({
                pageLength: 6,
                order: [[0, "desc"]],
                paging: false,
                scrollCollapse: true,
                scrollY: "50vh",
                language: {
                    "sProcessing": "Procesando... ",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros ",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:  ",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    }
                },
                oAria: {
                    "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                    "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                }
            });
            $(".informationTable tr").click(function () {
                $(this).addClass('selected').siblings().removeClass('selected');
                value = $(this).find('td:first').text();
                GeneratedItemsTable(value);
            });
            $('#DocumentDate').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
                format: 'dd/mm/yyyy',
            });
            $('#CutDate').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
                format: 'dd/mm/yyyy'
            });
            $('#SearchDate').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
                format: 'dd/mm/yyyy'
            });
            $('#BillingMonth').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
                format: 'mm/yyyy'
            });
            $.formattedDate = function (dateToFormat) {
                var dateObject = new Date(dateToFormat);
                var day = dateObject.getDate();
                var month = dateObject.getMonth() + 1;
                var year = dateObject.getFullYear();
                day = day < 10 ? "0" + day : day;
                month = month < 10 ? "0" + month : month;
                var formattedDate = month + "/" + day + "/" + year;
                return formattedDate;
            };
            $('#InterestRate').focusout(function () {
                if (($('#InterestRate').val().trim().replace(/,/g, "") != '' && !isNaN($('#InterestRate').val().replace(/,/g, "").trim()))) {
                     $('#InterestRate').val(parseFloat($('#InterestRate').val()).toFixed(4));
                }
            });
            $('#Charge').focusout(function () {
                if (($('#Charge').val().trim().replace(/,/g, "") != '' && !isNaN($('#Charge').val().replace(/,/g, "").trim()))) {
                     $('#Charge').val(parseFloat($('#Charge').val()).toFixed(4));
                }
            });
            if (($('#InterestRate').val().trim().replace(/,/g, "") != '' && !isNaN($('#InterestRate').val().trim().replace(/,/g, "")))) {
                $('#InterestRate').val(parseFloat($('#InterestRate').val()).toFixed(4));
            }
            if (($('#Charge').val().trim().replace(/,/g, "") != '' && !isNaN($('#Charge').val().trim().replace(/,/g, "")))) {
                $('#Charge').val(parseFloat($('#Charge').val()).toFixed(4));
            }
            generateHeader($('#BatchNumber').val());
        });

        function actualizar() {
            var isAllValid = true;
            if ($('#BatchNumber').val().trim() == '') {
                toastr.error('Debe de especificar un id. de lote', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#Description').val().trim() == '') {
                toastr.error('Debe de especificar una descripción', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#BillingMonth').val().trim() == '') {
                toastr.error('Debe de especificar un mes de facturacion', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#DocumentDate').val().trim() == '') {
                toastr.error('Debe de especificar una fecha de documento', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#CutDate').val().trim() == '') {
                toastr.error('Debe de especificar una fecha de corte', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#SearchDate').val().trim() == '') {
                toastr.error('Debe de especificar una fecha de busqueda', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#InterestRate').val().trim() == '') {
                toastr.error('Debe de especificar una tasa de interes', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#Charge').val().trim() == '') {
                toastr.error('Debe de especificar un recargo', 'Campos requeridos')
                isAllValid = false;
            }

            if (isAllValid) {
                swal({
                    title: "Actualizar",
                    text: "Esta accion sobreescribira los datos introducidos desea continuar ?",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Si, adelante!",
                    cancelButtonText: "No, cancelar!",
                    closeOnConfirm: true
                }, function () {
                    var data = {
                        BatchNumber: $('#BatchNumber').val().trim(),
                        Description: $('#Description').val().trim(),
                        CutDate: $('#CutDate').val().trim(),
                        SearchDate: $('#SearchDate').val().trim(),
                        BillingMonth: '01/' + $('#BillingMonth').datepicker({ dateFormat: 'ddMMyyyy' }).val(),
                        DocumentDate: $('#DocumentDate').val().trim(),
                        InterestRate: $('#InterestRate').val().trim(),
                        Charge: $('#Charge').val().trim(),
                        Preliminar: @preliminar,
                        Type: @type
                    };
                    $.ajax({
                        url: '@Url.Action("InsertInterestData", "AccountReceivables")',
                        type: "POST",
                        data: JSON.stringify(data),
                        dataType: "JSON",
                        cache: false,
                        contentType: "application/json",
                        success: function (result) {
                            if (result.status === "OK") {
                                generateHeader($('#BatchNumber').val().trim());
                            } else {
                                swal({
                                    title: "ERROR",
                                    text: result.status,
                                    type: "error"
                                });
                            }
                        }
                    });
                });
            }
        }

        function calcular() {
            var isAllValid = true;
            if ($('#BatchNumber').val().trim() == '') {
                toastr.error('Debe de especificar un id. de lote', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#Description').val().trim() == '') {
                toastr.error('Debe de especificar una descripción', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#BillingMonth').val().trim() == '') {
                toastr.error('Debe de especificar un mes de facturacion', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#DocumentDate').val().trim() == '') {
                toastr.error('Debe de especificar una fecha de documento', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#CutDate').val().trim() == '') {
                toastr.error('Debe de especificar una fecha de corte', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#SearchDate').val().trim() == '') {
                toastr.error('Debe de especificar una fecha de busqueda', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#InterestRate').val().trim() == '') {
                toastr.error('Debe de especificar una tasa de interes', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#Charge').val().trim() == '') {
                toastr.error('Debe de especificar un recargo', 'Campos requeridos')
                isAllValid = false;
            }

            if (isAllValid) {
                swal({
                    title: "Calcular",
                    text: "Esta accion calculara nuevamente los intereses de las transacciones introducidas sino ha guardado el lote este proceso lo hara, desea continuar ?",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Si, adelante!",
                    cancelButtonText: "No, cancelar!",
                    closeOnConfirm: true
                }, function () {
                        var data = {
                            BatchNumber: $('#BatchNumber').val().trim(),
                            Description: $('#Description').val().trim(),
                            CutDate: $('#CutDate').val().trim(),
                            SearchDate: $('#SearchDate').val().trim(),
                            BillingMonth: '01/' + $('#BillingMonth').datepicker({ dateFormat: 'ddMMyyyy' }).val(),
                            DocumentDate: $('#DocumentDate').val().trim(),
                            InterestRate: $('#InterestRate').val().trim(),
                            Charge: $('#Charge').val().trim(),
                            Preliminar: @preliminar,
                            Type: @type
                    };
                    $.ajax({
                        url: '@Url.Action("CalculateInterest", "AccountReceivables")',
                        type: "POST",
                        data: JSON.stringify(data),
                        dataType: "JSON",
                        cache: false,
                        contentType: "application/json",
                        success: function (result) {
                            if (result.status === "OK") {
                                generateHeader($('#BatchNumber').val().trim());
                            } else {
                                swal({
                                    title: "ERROR",
                                    text: result.status,
                                    type: "error"
                                });
                            }
                        }
                    });
                });
            }
        }

        function generateHeader(batchNumber) {
            var totalAmount = 0;
            if (batchNumber !== '') {
                $.ajax({
                    url: '@Url.Action("GetInterestDataCustomer", "AccountReceivables")?batchNumber=' + batchNumber,
                    type: "POST",
                    data: "",
                    dataType: "JSON",
                    cache: false,
                    contentType: "application/json",
                    success: function (result) {
                        var $table = $('<table class="table table-striped table-hover" />');
                        var thead =
                            '<thead>' +
                            '<tr>' +
                            '<th style="width:15%">Excluir</th>' +
                            '<th style="width:35%">Id. de cliente</th>' +
                            '<th style="width:40%">Total intereses</th>' +
                            '</tr>' +
                            '</thead>';
                        $table.append(thead);
                        var $tbody = $('<tbody/>');
                        if (result.registros.length > 0) {
                            $.each(result.registros, function (i, val) {
                                var $row = $('<tr/>');
                                var $labelCheck = $('<label>');
                                var $checkInput;
                                var $checkDiv = $('<div class="checkbox checkbox-success checkbox-circle text-center" style="margin-top: 1px; margin-bottom: 1px;">');
                                if (val.Exclude === false)
                                    $checkInput = $('<input type="checkbox" name="check">');
                                else
                                    $checkInput = $('<input type="checkbox" name="check" checked="checked">');
                                $checkDiv.append($checkInput).append($labelCheck);
                                $row.append($('<td/>').html($checkDiv));
                                $row.append($('<td/>').html(val.CustomerId.trim()));
                                $row.append($('<td/>').html(parseFloat(val.TotalAmount).toFixed(2).replace(/./g, function (c, i, a) {
                                    return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                                })));
                                totalAmount += parseFloat(val.TotalAmount);
                                $($row).click(function () {
                                    $(this).addClass('selected').siblings().removeClass('selected');
                                    generateDetails(val.CustomerId);
                                });
                                $checkInput.click(function () {
                                    if ($(this).is(':checked'))
                                        updateInterestCustomerExclusion(val.CustomerId, true);
                                    else
                                        updateInterestCustomerExclusion(val.CustomerId, false);
                                });
                                $tbody.append($row);
                            });
                            $('#total').html(parseFloat(totalAmount).toFixed(2).replace(/./g, function (c, i, a) {
                                return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                            }));
                            $table.append($tbody);
                        }

                        $('#customerRows').html($table);
                        $($table).DataTable({
                            pageLength: 6,
                            paging: false,
                            scrollCollapse: true,
                            scrollY: "40vh",
                            "bInfo": false,
                            "bLengthChange": false,
                            "bFilter": false,
                            language: {
                                "sProcessing": "Procesando... ",
                                "sLengthMenu": "Mostrar _MENU_ registros",
                                "sZeroRecords": "No se encontraron resultados",
                                "sEmptyTable": "Ningún dato disponible en esta tabla",
                                "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros ",
                                "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                                "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                                "sInfoPostFix": "",
                                "sSearch": "Buscar:  ",
                                "sUrl": "",
                                "sInfoThousands": ",",
                                "sLoadingRecords": "Cargando...",
                                "oPaginate": {
                                    "sFirst": "Primero",
                                    "sLast": "Último",
                                    "sNext": "Siguiente",
                                    "sPrevious": "Anterior"
                                }
                            },
                            oAria: {
                                "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        });
                    }
                });
            }
        }

        function generateDetails(code) {
            $.ajax({
                url: '@Url.Action("GetInterestDataDetails", "AccountReceivables")?batchNumber=' + $('#BatchNumber').val().trim() + "&customerId=" + code,
                type: "POST",
                data: "",
                dataType: "JSON",
                contentType: "application/json",
                success: function (result) {
                    var $table = $('<table class="table table-striped table-hover"/>');
                    $table.append(
                        '<thead>' +
                        '<tr>' +
                        '<th style="width:3%">#</th>' +
                        '<th style="width:3%">Excluir</th>' +
                        '<th style="width:8%">Documento</th>' +
                        '<th style="width:9%">Monto</th>' +
                        '<th style="width:9%">Bal. anterior</th>' +
                        '<th style="width:9%">Monto pago</th>' +
                        '<th style="width:9%">Bal. pend.</th>' +
                        '<th style="width:7%">Fecha limite</th>' +
                        '<th style="width:7%">Fecha corte</th>' +
                        '<th style="width:4%">Dias</th>' +
                        '<th style="width:4%">Tasa interes</th>' +
                        '<th style="width:7%">Interes</th>' +
                        '<th style="width:4%">Tasa recargo</th>' +
                        '<th style="width:7%">Recargo</th>' +
                        '<th style="width:10%">Total</th>' +
                        '</tr>' +
                        '</thead>');
                    if (result.registros.length > 0) {
                        var $tbody = $('<tbody/>');
                        $.each(result.registros, function (i, val) {
                            var $row = $('<tr/>');
                            var $labelCheck = $('<label>');
                            var $checkInput;
                            var $applyButton = $('<button type="button" class="btn btn-danger btn-xs">Detalle</button>');
                            var $checkDiv = $('<div class="checkbox checkbox-success checkbox-circle text-center" style="margin-top: 1px; margin-bottom: 1px;">');
                            if (val.Exclude === false)
                                $checkInput = $('<input type="checkbox" name="check">');
                            else
                                $checkInput = $('<input type="checkbox" name="check" checked="checked">');
                            $checkDiv.append($checkInput).append($labelCheck);
                            $row.append($('<td/>').html($applyButton));
                            $row.append($('<td/>').html($checkDiv));
                            $row.append($('<td/>').html(val.DocumentNumber));
                            $row.append($('<td/>').html(parseFloat(val.DocumentAmount).toFixed(2).replace(/./g, function (c, i, a) {
                                return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                            })));
                            $row.append($('<td/>').html(parseFloat(val.PreviousAmount).toFixed(2).replace(/./g, function (c, i, a) {
                                return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                            })));
                            $row.append($('<td/>').html(parseFloat(val.AppliedAmount).toFixed(2).replace(/./g, function (c, i, a) {
                                return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                            })));
                            $row.append($('<td/>').html(parseFloat(val.CurrentAmount).toFixed(2).replace(/./g, function (c, i, a) {
                                return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                            })));
                            $row.append($('<td/>').html($.formattedDate(new Date(parseInt(val.DueDate.substr(6))))));
                            $row.append($('<td/>').html($.formattedDate(new Date(parseInt(val.CutDate.substr(6))))));
                            $row.append($('<td/>').html(val.Days));
                            $row.append($('<td/>').html(parseFloat(val.InterestRate).toFixed(2).replace(/./g, function (c, i, a) {
                                return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                            })));
                            $row.append($('<td/>').html(parseFloat(val.InterestAmount).toFixed(2).replace(/./g, function (c, i, a) {
                                return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                            })));
                            $row.append($('<td/>').html(parseFloat(val.Charge).toFixed(2).replace(/./g, function (c, i, a) {
                                return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                            })));
                            $row.append($('<td/>').html(parseFloat(val.ChargeAmount).toFixed(2).replace(/./g, function (c, i, a) {
                                return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                            })));
                            $row.append($('<td/>').html(parseFloat(val.TotalAmount).toFixed(2).replace(/./g, function (c, i, a) {
                                return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                            })));
                            $checkInput.click(function () {
                                if ($(this).is(':checked'))
                                    updateInterestDocumentExclusion(code, val.DocumentNumber, true);
                                else
                                    updateInterestDocumentExclusion(code, val.DocumentNumber, false);
                            });
                            $applyButton.click(function () {
                                getDetailInterest(code, val.DocumentNumber);
                            });
                            $tbody.append($row);
                        });
                        $table.append($tbody);
                    }

                    $('#itemRows').html($table);
                    $($table).DataTable({
                        pageLength: 6,
                        order: [[0, "desc"]],
                        paging: false,
                        scrollCollapse: true,
                        scrollX: true,
                        scrollY: "40vh",
                        language: {
                            "sProcessing": "Procesando... ",
                            "sLengthMenu": "Mostrar _MENU_ registros",
                            "sZeroRecords": "No se encontraron resultados",
                            "sEmptyTable": "Ningún dato disponible en esta tabla",
                            "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros ",
                            "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix": "",
                            "sSearch": "Buscar:  ",
                            "sUrl": "",
                            "sInfoThousands": ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst": "Primero",
                                "sLast": "Último",
                                "sNext": "Siguiente",
                                "sPrevious": "Anterior"
                            }
                        },
                        oAria: {
                            "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                            "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                        }
                    });
                }
            });
        }

        function guardar() {
            var isAllValid = true;
            if ($('#BatchNumber').val().trim() == '') {
                toastr.error('Debe de especificar un id. de lote', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#Description').val().trim() == '') {
                toastr.error('Debe de especificar una descripción', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#BillingMonth').val().trim() == '') {
                toastr.error('Debe de especificar un mes de facturacion', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#DocumentDate').val().trim() == '') {
                toastr.error('Debe de especificar una fecha de documento', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#CutDate').val().trim() == '') {
                toastr.error('Debe de especificar una fecha de corte', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#SearchDate').val().trim() == '') {
                toastr.error('Debe de especificar una fecha de busqueda', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#InterestRate').val().trim() == '') {
                toastr.error('Debe de especificar una tasa de interes', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#Charge').val().trim() == '') {
                toastr.error('Debe de especificar un recargo', 'Campos requeridos')
                isAllValid = false;
            }

            if (isAllValid) {
                var data = {
                    BatchNumber: $('#BatchNumber').val().trim(),
                    Description: $('#Description').val().trim(),
                    CutDate: $('#CutDate').val().trim(),
                    SearchDate: $('#SearchDate').val().trim(),
                    BillingMonth: '01/' + $('#BillingMonth').datepicker({ dateFormat: 'ddMMyyyy' }).val(),
                    DocumentDate: $('#DocumentDate').val().trim(),
                    InterestRate: $('#InterestRate').val().trim(),
                    Charge: $('#Charge').val().trim(),
                    Preliminar: @preliminar,
                    Type: @type
                    };
                $.ajax({
                    url: '@Url.Action("SaveInterest", "AccountReceivables")',
                    type: "POST",
                    data: JSON.stringify(data),
                    dataType: "JSON",
                    cache: false,
                    contentType: "application/json",
                    success: function (result) {
                        if (result.status === "OK") {
                            window.location.href = '@Url.Action("InterestIndex", "AccountReceivables")?type=' + @preliminar;
                        } else {
                            swal({
                                title: "ERROR",
                                text: result.status,
                                type: "error"
                            });
                        }
                    }
                });
            }
        }

        function getDetailInterest(customerId, documentNumber) {
            $('#modal-InvoiceApply').modal({ backdrop: 'static', keyboard: false, action: 'show' });
            $.ajax({
                url: '@Url.Action("GetDetailPaymentDetails", "AccountReceivables")?batchNumber=' + $('#BatchNumber').val() +'&customerId=' + customerId + "&documentNumber=" + documentNumber + '&preliminar=' + @preliminar,
                type: "POST",
                data: "",
                cache: false,
                async: false,
                dataType: "JSON",
                contentType: "application/json",
                success: function (result) {
                    var $table = $('<table class="table table-striped table-hover" id="invoiceTable"/>');
                    $table.append(
                        '<thead>' +
                        '<tr>' +
                        '<th style="width:12%">No. de documento</th>' +
                        '<th style="width:11%">Bal. anterior</th>' +
                        '<th style="width:11%">Monto aplicado</th>' +
                        '<th style="width:11%">Bal. pendiente</th>' +
                        '<th style="width:11%">Fecha limite</th>' +
                        '<th style="width:11%">Fecha pago</th>' +
                        '<th style="width:9%">Dias</th>' +
                        '<th style="width:11%">Interes</th>' +
                        '<th style="width:11%">Recargo</th>' +
                        '<th style="width:11%">Total</th>' +
                        '</tr>' +
                        '</thead>');
                    if (result.registros.length > 0) {
                        var $tbody = $('<tbody/>');
                        $.each(result.registros, function (i, val) {
                            var $row = $('<tr/>');
                            $row.append($('<td />').html(val.DocumentNumber));
                            $row.append($('<td />').html(parseFloat(val.PreviousAmount).toFixed(2).replace(/./g, function (c, i, a) {
                                return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                            })));
                            $row.append($('<td />').html(parseFloat(val.DocumentAmount).toFixed(2).replace(/./g, function (c, i, a) {
                                return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                            })));
                            $row.append($('<td />').html(parseFloat(val.CurrentAmount).toFixed(2).replace(/./g, function (c, i, a) {
                                return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                            })));
                            $row.append($('<td />').html($.formattedDate(new Date(parseInt(val.DueDate.substr(6))))));
                            $row.append($('<td />').html($.formattedDate(new Date(parseInt(val.CutDate.substr(6))))));
                            $row.append($('<td />').html(val.Days));
                            $row.append($('<td />').html(parseFloat(val.InterestAmount).toFixed(2).replace(/./g, function (c, i, a) {
                                return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                            })));
                            $row.append($('<td />').html(parseFloat(val.ChargeAmount).toFixed(2).replace(/./g, function (c, i, a) {
                                return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                            })));
                            $row.append($('<td />').html(parseFloat(val.TotalAmount).toFixed(2).replace(/./g, function (c, i, a) {
                                return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                            })));
                            $tbody.append($row);
                        });
                        $table.append($tbody);
                    }
                    $('#invoiceRows').html($table);
                }
            });
        }

        function eliminar() {
            swal({
                title: "Eliminar",
                text: "Esta seguro que desea eliminar este lote ?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Si, eliminar!",
                cancelButtonText: "No, cancelar!",
                closeOnConfirm: false
            }, function () {
                $.ajax({
                    url: '@Url.Action("DeleteInterestTransaction", "AccountReceivables")?batchNumber=' + $('#BatchNumber').val(),
                    type: "POST",
                    data: "",
                    cache: false,
                    dataType: "JSON",
                    contentType: "application/json",
                    success: function (result) {
                        if (result.status === "OK") {
                            window.location.href = '@Url.Action("InterestIndex", "AccountReceivables")?type=' + @preliminar;
                        } else {
                            swal({
                                title: "ERROR",
                                text: result.status,
                                type: "error"
                            });
                        }
                    }
                });
            });
        }

        function anular() {
            swal({
                title: "Anular",
                text: "Esta seguro que desea anular este lote ?, esta accion pondra a este lote disponible para volver a trabajarlo",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Si, proceder!",
                cancelButtonText: "No, cancelar!",
                closeOnConfirm: false
            }, function () {
                $.ajax({
                    url: '@Url.Action("VoidInterestTransaction", "AccountReceivables")?batchNumber=' + $('#BatchNumber').val(),
                    type: "POST",
                    data: "",
                    cache: false,
                    dataType: "JSON",
                    contentType: "application/json",
                    success: function (result) {
                        if (result.status === "OK") {
                            window.location.href = '@Url.Action("InterestIndex", "AccountReceivables")?type=' + @preliminar;
                        } else {
                            swal({
                                title: "ERROR",
                                text: result.status,
                                type: "error"
                            });
                        }
                    }
                });
            });
        }

        function imprimir() {
            if ($('#BatchNumber').val().trim() !== '') {
                var reportName = 'InterestReport';
                if ($('#printOption').val() === '10') 
                    reportName += '.pdf';
                else
                    reportName += '.xls';
                var url = '@Url.Content("~/PDF/Reportes/")' + reportName;
                toastr.info('Estamos procesando su solicitud', 'Por favor espere');
                $.ajax({
                    url: '@Url.Action("InterestReport", "AccountReceivables")?batchNumber=' +$('#BatchNumber').val() + '&printOption=' + $('#printOption').val(),
                    type: "POST",
                    data: "",
                    cache: false,
                    dataType: "JSON",
                    contentType: "application/json",
                    success: function(d) {
                        if (d.status === "OK") {
                            window.open(url);
                        } else {
                            alert(d.status);
                        }
                    }
                });
            }
        }

        function getInterestRate() {
            swal({
                title: "Obtener",
                text: "Esta seguro que desea obtener la tasa de interes desde el banco central ?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Si, proceder!",
                cancelButtonText: "No, abortar!",
                closeOnConfirm: true
            }, function () {
                $.ajax({
                    url: '@Url.Action("GetInterestRate", "AccountReceivables")?date=' + '01/' + $('#BillingMonth').datepicker({ dateFormat: 'ddMMyyyy' }).val(),
                    type: "POST",
                    data: "",
                    cache: false,
                    dataType: "JSON",
                    contentType: "application/json",
                    success: function (result) {
                        if (result.status === "OK") {
                            $('#InterestRate').val(result.rate);
                        } else {
                            swal({
                                title: "ERROR",
                                text: result.status,
                                type: "error"
                            });
                        }
                    }
                });
            });
        }

        function contabilizar() {
            swal({
                title: "Someter",
                text: "Esta seguro que desea someter este lote ?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Si, proceder!",
                cancelButtonText: "No, abortar!",
                closeOnConfirm: true
            }, function () {
                $.ajax({
                    url: '@Url.Action("PostInterestData", "AccountReceivables")?batchNumber=' + $('#BatchNumber').val() + '&preliminar=' + @preliminar,
                    type: "POST",
                    data: "",
                    cache: false,
                    dataType: "JSON",
                    contentType: "application/json",
                    success: function (result) {
                        if (result.status === "OK") {
                            window.location.href = '@Url.Action("InterestIndex", "AccountReceivables")?type=' + @preliminar;
                        } else {
                            swal({
                                title: "ERROR",
                                text: result.status,
                                type: "error"
                            });
                        }
                    }
                });
            });
        }

        function updateInterestDocumentExclusion(customerId, code, exclude) {
            $.ajax({
                url: '@Url.Action("UpdateInterestTransactionInvoiceExclusion", "AccountReceivables")?batchNumber=' + $('#BatchNumber').val() + "&customerId=" + customerId + "&documentNumber=" + code + "&exclude=" + exclude,
                type: "POST",
                data: "",
                cache: false,
                dataType: "JSON",
                contentType: "application/json",
                success: function (result) {
                    if (result.status !== "OK")
                        swal({
                            title: "ERROR",
                            text: result.status,
                            type: "error"
                        });
                }
            });
        }

        function updateInterestCustomerExclusion(code, exclude) {
            $.ajax({
                url: '@Url.Action("UpdateInterestTransactionCustomerExclusion", "AccountReceivables")?batchNumber=' + $('#BatchNumber').val() + "&customerId=" + code + "&exclude=" + exclude,
                type: "POST",
                data: "",
                cache: false,
                dataType: "JSON",
                contentType: "application/json",
                success: function (result) {
                    if (result.status !== "OK")
                       swal({
                            title: "ERROR",
                            text: result.status,
                            type: "error"
                        });
                }
            });
        }
    </script>
}