@using Microsoft.AspNet.Identity;
@model IEnumerable<Seaboard.Intranet.Domain.ViewModels.PaymentRequestViewModel>
@{
    Layout = "~/Views/Shared/_BillingLayout.cshtml";
    ViewBag.Title = "Solicitudes de pago";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Solicitudes de pago</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home")">Inicio</a>
            </li>
            <li class="active">
                <strong>Listado de solicitudes de pago</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Listado de solicitudes de pago</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                    </div>
                </div>
                <div class="ibox-content">
                    @Html.ActionLink("NUEVA SOLICITUD", "Create", "PaymentRequest", null, new { @class = "btn btn-primary" })
                    <div class="hr-line-dashed"></div>
                    <table class="table table-striped table-bordered table-hover informationTable">
                        <thead>
                            <tr>
                                <th>No. de solicitud</th>
                                <th>Descripción</th>
                                <th>Id. de proveedor</th>
                                <th>Nombre</th>
                                <th>Fecha</th>
                                <th>Monto</th>
                                <th>Moneda</th>
                                <th>Prioridad</th>
                                <th>Estado</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@Html.ActionLink(item.PaymentRequestId, "Edit", new { @id = item.PaymentRequestId }) </td>
                                    <td>@item.Description</td>
                                    <td>@item.VendorId</td>
                                    <td>@item.VendName</td>
                                    <td>@item.DocumentDate.ToShortDateString()</td>
                                    <td>@item.Amount.ToString("C2")</td>
                                    <td>@item.CurrencyId</td>
                                    <td class="text-center">
                                        @switch (item.Priority.ToLower())
                                        {
                                            case "baja":
                                                <span class="label label-success">Baja</span>
                                                break;
                                            case "normal":
                                                <span class="label label-warning">Normal</span>
                                                break;
                                            case "alta":
                                                <span class="label label-danger">Alta</span>
                                                break;
                                            default:
                                                <span class="label label-success">Baja</span>
                                                break;
                                        }
                                    </td>
                                    <td>
                                        @if (item.Voided)
                                        {
                                        <i class="badge badge-danger">Anulado</i>
                                        }
                                        else
                                        {
                                            switch (item.Status)
                                            {
                                                case "No enviado":
                                                    <i class="badge badge-danger">@item.Status</i>
                                                    break;
                                                case "Enviado":
                                                    <i class="badge badge-warning-light">@item.Status</i>
                                                    break;
                                                case "Rechazado":
                                                    <i class="badge badge-primary">@item.Status</i>
                                                    break;
                                                case "Anulado":
                                                    <i class="badge badge-warning">@item.Status</i>
                                                    break;
                                                case "Aprobado":
                                                    <i class="badge badge-info">@item.Status</i>
                                                    break;
                                                case "Abierto":
                                                    <i class="badge badge-warning-light">@item.Status</i>
                                                    break;
                                                case "Contabilizado":
                                                    <i class="badge badge-info">@item.Status</i>
                                                    break;
                                            }
                                        }

                                    </td>
                                    <td>
                                        <a class="modal-link" href="@Url.Action("Details", "PaymentRequest", new {id = item.PaymentRequestId})"><i class="fa fa-bars"></i></a>
                                        @switch (Seaboard.Intranet.BusinessLogic.Account.GetAccount(User.Identity.GetUserName()).Department)
                                        {
                                            case "COMPRAS":
                                            case "ADUANAS":
                                                <a onclick="Print('@item.PaymentRequestId');"><i class="fa fa-print"></i></a>
                                                break;
                                            case "NEGOCIOS":
                                                <a onclick="PrintSales('@item.PaymentRequestId');"><i class="fa fa-print"></i></a>
                                                break;
                                            default:
                                                <a onclick="PrintDepartment('@item.PaymentRequestId');"><i class="fa fa-print"></i></a>
                                                break;
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div id="modal-container" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
            </div>
        </div>
    </div>
</div>
@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/toastrStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/toastr")

    <script>
        $(document).ready(function () {
            $('body').on('click',
                   '.modal-link',
                   function(e) {
                       e.preventDefault();
                       $(this).attr('data-target', '#modal-container');
                       $(this).attr('data-toggle', 'modal');
                   });
            $('#modal-container').on('hidden.bs.modal',
                   function() {
                       $(this).removeData('bs.modal');
                   });
               $('.informationTable').DataTable({
                   pageLength: 10,
                   dom: '<"html5buttons"B>lTfgitp',
                   order: [[0, "desc"]],
                   language: {
                       "sProcessing": "Procesando... ",
                       "sLengthMenu": "Mostrar _MENU_ registros",
                       "sZeroRecords": "No se encontraron resultados",
                       "sEmptyTable": "Ningún dato disponible en esta tabla",
                       "sInfo":
                           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros ",
                       "sInfoEmpty":
                           "Mostrando registros del 0 al 0 de un total de 0 registros",
                       "sInfoFiltered":
                           "(filtrado de un total de _MAX_ registros)",
                       "sInfoPostFix": "",
                       "sSearch": "Buscar:  ",
                       "sUrl": "",
                       "sInfoThousands": ",",
                       "sLoadingRecords": "Cargando...",
                       "oPaginate": {
                           "sFirst": "Primero",
                           "sLast": "Último",
                           "sNext": "Siguiente",
                           "sPrevious": "Anterior"
                       }
                   },
                   oAria: {
                       "sSortAscending":
                           ": Activar para ordenar la columna de manera ascendente",
                       "sSortDescending":
                           ": Activar para ordenar la columna de manera descendente"
                   },
                   buttons: [
                       { extend: 'copy' },
                       { extend: 'csv' },
                       { extend: 'excel', title: 'ExampleFile' },
                       { extend: 'pdf', title: 'ExampleFile' },
                       {
                           extend: 'print',
                           customize: function(win) {
                               $(win.document.body).addClass('white-bg');
                               $(win.document.body).css('font-size', '10px');

                               $(win.document.body).find('table')
                                   .addClass('compact')
                                   .css('font-size', 'inherit');
                           }
                       }
                   ]

               });
           });

        function PrintDepartment(id) {
              var url = '@Url.Content("~/PDF/Pago/")' + id + '.pdf';
              toastr.info('Estamos procesando su solicitud', 'Por favor espere')
              $.ajax({
                  url: '@Url.Action("PrintDepartment", "PaymentRequest")?id=' +
                      id,
                  type: "POST",
                  data: "",
                  cache: false,
                  dataType: "JSON",
                  contentType: "application/json",
                  success: function(result) {
                       $('#loadingPanel').hide();
                      if (result.status === "OK")
                          window.open(url);
                      else
                          alert(result.status);
                   },
                  error: function(result) {
                       toastr.error(
                           'Ha ocurrido un error en la generación del documento',
                           'Campos requeridos')
                   }
              });
        }


        function PrintSales(id) {
               var url = '@Url.Content("~/PDF/Pago/")' + id + '.pdf';
               toastr.info('Estamos procesando su solicitud', 'Por favor espere')
               $.ajax({
                   url: '@Url.Action("PrintSales", "PaymentRequest")?id=' + id,
                   type: "POST",
                   data: "",
                   cache: false,
                   dataType: "JSON",
                   contentType: "application/json",
                   success: function(result) {
                       $('#loadingPanel').hide();
                       if (result.status === "OK")
                           window.open(url);
                       else
                           alert(result.status);
                   },
                   error: function(result) {
                       toastr.error(
                           'Ha ocurrido un error en la generación del documento',
                           'Campos requeridos')
                   }
               });
           }

           function Print(id) {
               var url = '@Url.Content("~/PDF/Pago/")' + id + '.pdf';
               toastr.info('Estamos procesando su solicitud', 'Por favor espere')
               $.ajax({
                   url: '@Url.Action("Print", "PaymentRequest")?id=' + id,
                   type: "POST",
                   data: "",
                   cache: false,
                   dataType: "JSON",
                   contentType: "application/json",
                   success: function(result) {
                       $('#loadingPanel').hide();
                       if (result.status === "OK")
                           window.open(url);
                       else
                           alert(result.status);
                   },
                   error: function(result) {
                       toastr.error(
                           'Ha ocurrido un error en la generación del documento',
                           'Campos requeridos')
                   }
               });
           }
    </script>
}