@model IEnumerable<Seaboard.Intranet.Domain.ViewModels.PurchaseRequestViewModel>
@{
    ViewBag.Title = "Solicitudes de compras";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Solicitudes de servicio</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home")">Inicio</a>
            </li>
            <li class="active">
                <strong>Listado de solicitudes de compras</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Listado de solicitudes de compras</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                    </div>
                </div>

                <div class="ibox-content">
                    @Html.ActionLink("NUEVA SOLICITUD", "Create", "Inventory", null, new { @class = "btn btn-primary" })
                    <div class="hr-line-dashed"></div>
                    <table class="table table-striped table-bordered table-hover informationTable">
                        <thead>
                            <tr>
                                <th style="width:15%">Solicitud</th>
                                <th style="width:25%">Descripción</th>
                                <th style="width:10%">Prioridad</th>
                                <th style="width:12%">Fecha doc</th>
                                <th style="width:12%">Fecha req</th>
                                <th style="width:5%">Solicitante</th>
                                <th style="width:8%">Estado</th>
                                <th style="width:30%">#</th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@Html.ActionLink(item.RequestId, "Edit", new { id = @item.RequestId })</td>
                                    <td>@item.Description</td>
                                    <td class="text-center">
                                        @switch (item.Priority.ToLower())
                                        {
                                            case "baja":
                                                <span class="label label-success">Baja</span>
                                                break;
                                            case "normal":
                                                <span class="label label-warning">Normal</span>
                                                break;
                                            case "alta":
                                                <span class="label label-danger">Alta</span>
                                                break;
                                            default:
                                                <span class="label label-success">Baja</span>
                                                break;
                                        }
                                    </td>
                                    <td>@item.DocumentDate.ToShortDateString()</td>
                                    <td>@item.RequiredDate.ToShortDateString()</td>
                                    <td>@item.Requester</td>
                                    <td>
                                        @switch (item.Status)
                                        {
                                            case "No enviado":
                                                <i class="badge badge-danger">@item.Status</i>
                                                break;
                                            case "Enviado":
                                                <i class="badge badge-primary">@item.Status</i>
                                                break;
                                            case "Rechazado":
                                                <i class="badge badge-info">@item.Status</i>
                                                break;
                                            case "Anulado":
                                                <i class="badge badge-warning">@item.Status</i>
                                                break;
                                            case "Aprobado":
                                                <i class="badge badge-success">@item.Status</i>
                                                break;
                                            case "No iniciado":
                                                <i class="badge badge-danger">@item.Status</i>
                                                break;
                                            case "En requisicion":
                                                <i class="badge badge-warning-light">@item.Status</i>
                                                break;
                                            case "En pre-analisis":
                                                <i class="badge badge-primary">@item.Status</i>
                                                break;
                                            case "En cotizacion":
                                                <i class="badge badge-warning">@item.Status</i>
                                                break;
                                            case "En analisis":
                                                <i class="badge badge-info">@item.Status</i>
                                                break;
                                            case "En compras":
                                                <i class="badge badge-success">@item.Status</i>
                                                break;
                                            case "Recibido":
                                                <i class="badge badge-success">@item.Status</i>
                                                break;
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group">
                                            <a href="@Url.Action("Details","Inventory", new { id = item.RequestId })" class="modal-link"><i class="fa fa-bars"></i></a>
                                            <a onclick="Print('@item.RequestId');"><i class="fa fa-print"></i></a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div id="modal-container" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content animated flipInY">
            </div>
        </div>
    </div>
</div>
@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/toastrStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/toastr")

    <script>
        $(document).ready(function () {
            $('body').on('click', '.modal-link', function (e) {
                e.preventDefault();
                $(this).attr('data-target', '#modal-container');
                $(this).attr('data-toggle', 'modal');
            });

            $('#modal-container').on('hidden.bs.modal', function () {
                $(this).removeData('bs.modal');
            });

            $('.informationTable').DataTable({
                pageLength: 10,
                dom: '<"html5buttons"B>lTfgitp',
                order: [[0, "desc"]],
                language: {
                    "sProcessing": "Procesando... ",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros ",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:  ",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    }
                },
                oAria: {
                    "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                    "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                },
                buttons: [
                    { extend: 'copy' },
                    { extend: 'csv' },
                    { extend: 'excel', title: 'ExampleFile' },
                    { extend: 'pdf', title: 'ExampleFile' },

                    {
                        extend: 'print',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        }
                    }
                ]

            });
        });

        function Print(id) {
            var url = '@Url.Content("~/PDF/Requisicion/")' + id + '.pdf';
            toastr.info('Estamos procesando su solicitud', 'Por favor espere')
            $.ajax({
                url: '@Url.Action("Print", "ServiceRequest")?id=' + id,
                type: "POST",
                data: "",
                cache: false,
                dataType: "JSON",
                contentType: "application/json",
                success: function (result) {
                    window.open(url);
                },
                error: function (result) {
                    toastr.error('Ha ocurrido un error en la generación del documento', 'Campos requeridos')
                }
            });
        }
    </script>
}
