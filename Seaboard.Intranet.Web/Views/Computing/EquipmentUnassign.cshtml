@using Microsoft.AspNet.Identity;
@using Seaboard.Intranet.BusinessLogic;
@model Seaboard.Intranet.Domain.EquipmentUnassign

@{
    ViewBag.Title = "Desasignación";
    Layout = "~/Views/Shared/_ComputingLayout.cshtml";
    var deviceTypes = new List<SelectListItem>()
{
        new SelectListItem { Value = "10", Text = "Equipo" },
        new SelectListItem { Value = "20", Text = "Tarjeta SIM" }
    };
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Desasignación</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home")">Inicio</a>
            </li>
            <li>
                <a href="@Url.Action("EquipmentUnassignIndex", "Computing")">Listado de desasignaciones</a>
            </li>
            <li class="active">
                <strong>Desasignación</strong>
            </li>
        </ol>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight ecommerce">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h3>Desasignación</h3>
                </div>

                <div class="ibox-content">
                    <div class="form-group">
                        <div class="col-sm-12 col-sm-offset-1">
                            @if (string.IsNullOrEmpty(Model.DeviceSimCard))
                            {
                                <button class="btn btn-primary" type="button" onclick="guardar();"><i class="fa fa-check-circle"></i> Desasignar</button>
                            }
                            @if (!string.IsNullOrEmpty(Model.DeviceSimCard))
                            {
                                <button class="btn btn-default" type="button" onclick="imprimir();"><i class="fa fa-print"></i> Imprimir</button>
                            }
                            <br />
                        </div>
                    </div>
                    <br />
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <div class="tabs-container">
                <ul class="nav nav-tabs">
                    <li class="active">
                        <a data-toggle="tab" href="#tab-1"> Datos Basicos</a>
                    </li>
                    <li class="">
                        <a data-toggle="tab" href="#tab-2" onclick="cargarArchivos();"> Adjuntos</a>
                    </li>
                </ul>

                <div class="tab-content">
                    <div id="tab-1" class="tab-pane active">
                        @using (Html.BeginForm("SaveEquipmentRepair", "Computing", FormMethod.Post, new { @id = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="panel-body">
                                <fieldset class="form-horizontal">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="col-sm-4 control-label">No. de desasignación:</label>
                                                <div class="col-sm-8 input-group">
                                                    @Html.TextBoxFor(m => m.RequestId, new { @class = "form-control", @readonly = "" })
                                                    @Html.ValidationMessageFor(model => model.RequestId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class="col-sm-4 control-label">Equipo asignado a:</label>
                                                <div class="col-sm-8 input-group">
                                                    @Html.TextBoxFor(model => model.EmployeeId, new { @class = "form-control" })
                                                    <span class="input-group-btn">
                                                        <button id="lookupEmpleado" type="button" class="btn btn-primary">
                                                            <i class="fa fa-search"></i>
                                                        </button>
                                                    </span>
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class="col-sm-4 control-label">Tipo dispositivo:</label>
                                                <div class="col-sm-8 input-group">
                                                    @Html.DropDownListFor(model => model.DeviceType, deviceTypes, "Seleccione una opción", new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.DeviceType, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-5">
                                            <div class="form-group">
                                                <label class="col-sm-4 control-label">Dispositivo/Tarjeta SIM:</label>
                                                <div class="col-sm-8 input-group">
                                                    @Html.TextBoxFor(model => model.DeviceSimCard, new { @class = "form-control" })
                                                    <span class="input-group-btn">
                                                        <button id="lookupEquipo" type="button" class="btn btn-primary" onclick="getEquipo();">
                                                            <i class="fa fa-search"></i>
                                                        </button>
                                                    </span>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-4 control-label">Motivo:</label>
                                                <div class="col-sm-8 input-group">
                                                    @Html.TextAreaFor(m => m.Reason, new { @class = "form-control", @rows = "4" })
                                                    @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-sm-11">
                                            <div class="form-group">
                                                <label class="col-sm-2 control-label">Nota:</label>
                                                <div class="col-sm-10">
                                                    @Html.TextAreaFor(m => m.Note, new { @class = "form-control", @rows = "5", @placeholder = "Introduzca la nota" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        }
                    </div>

                    <div id="tab-2" class="tab-pane">
                        <div class="panel-body">
                            <div class="row">
                                <form action="javascript:;" method="post" enctype="multipart/form-data" id="attachmentForm" accept-charset="utf-8">
                                    <div class="col-md-9">
                                        <div class="fileinput fileinput-new input-group" data-provides="fileinput">
                                            <div class="form-control" data-trigger="fileinput">
                                                <i class="glyphicon glyphicon-file fileinput-exists"></i>
                                                <span class="fileinput-filename"></span>
                                            </div>
                                            <span class="input-group-addon btn btn-default btn-file"><span class="fileinput-new">Seleccionar archivo</span><span class="fileinput-exists">Cambiar</span><input type="file" name="FileData" id="FileData"></span>
                                            <a href="#" class="input-group-addon btn btn-default fileinput-exists" data-dismiss="fileinput">Borrar</a>
                                        </div>
                                    </div>

                                    <div class="col-md-3">
                                        <button type="button" class="btn btn-success" onclick="atacharArchivo();" data-dismiss="modal">Adjuntar</button>
                                    </div>
                                </form>
                            </div>

                            <div class="hr-line-dashed"></div>
                            <div class="row" id="attachmentFiles"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Styles {
    <link href="@Url.Content("~/Content/plugins/lookupbox/lookupbox.css")" rel="stylesheet" type="text/css" />
    @Styles.Render("~/plugins/toastrStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/switcheryStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/plugins/sweetAlertStyles")
}

@section Scripts {
    @Scripts.Render("~/Scripts/plugins/jquery-ui/jquery-ui.min.js")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/toastr")
    @Scripts.Render("~/Scripts/plugins/lookupbox/jquery.lookupbox.js")
    @Scripts.Render("~/plugins/switchery")
    @Scripts.Render("~/plugins/sweetAlert")

    <script>
        $(document).ready(function () {
            $("#lookupEmpleado").lookupbox({
                title: 'Busqueda:',
                url: '@Url.Action("ListLookup", "Home")?tipo=18&consulta=',
                imgLoader: '<img src="~/Images/ajaxloader.gif">',
                width: 800,
                height: 1000,
                onItemSelected: function (data) {
                    $('input[name=EmployeeId]').val(data.EmployeeId.trim() + ' - ' + data.Name.trim());
                },
                tableHeader: ['Id. de empleado', 'Nombre', 'Departamento'],
                hiddenFields: ['FirstName','LastName','Identification','JobTitle','Email']
            });
            deshabilitarControles();
        });
        window.onbeforeunload = function () { $.ajax({ url: '@Url.Action("UnblockSecuence", "Computing", new { id = Model.RequestId, formulario = "EIPM10400"})' }).done(function () { }); }

        function deshabilitarControles() {
            if ('@string.IsNullOrEmpty(Model.DeviceSimCard)' === 'False') {
                $('#DeviceSimCard').prop("readonly", true);
                $('#EmployeeId').prop('readonly', true);
                $('#Reason').prop('readonly', true);
                $('#Note').prop('readonly', true);
                $('#DeviceType').prop('disabled', true);
                $('#lookupEquipo').css('display', 'none');
                $('#lookupEmpleado').css('display', 'none');
            }
        }

        function getEquipo() {
            if ($('#DeviceType').val().trim().length > 0) {
                if ($('#DeviceType').val().trim() === "10")
                    $("#lookupEquipo").lookupbox({
                        title: 'Busqueda:',
                        url: '@Url.Action("LookupData", "Computing")?tipo=4&consultaExtra=' + $('#EmployeeId').val() + '&consulta=',
                        imgLoader: '<img src="~/Images/ajaxloader.gif">',
                        width: 800,
                        height: 1000,
                        onItemSelected: function (data) {
                            $('input[name=DeviceSimCard]').val(data.Id.trim() + ' - ' + data.Descripción);
                        },
                        tableHeader: ['Id. de dispositivo', 'Modelo', 'Numero de serie'],
                        hiddenFields: ['DataPlus']
                    });
                else
                    $("#lookupEquipo").lookupbox({
                        title: 'Busqueda:',
                        url: '@Url.Action("LookupData", "Computing")?tipo=5&consultaExtra=' + $('#EmployeeId').val() + '&consulta=',
                        imgLoader: '<img src="~/Images/ajaxloader.gif">',
                        width: 800,
                        height: 1000,
                        onItemSelected: function (data) {
                            $('input[name=DeviceSimCard]').val(data.Id.trim() + ' - ' + data.Descripción);
                        },
                        tableHeader: ['Id. de dispositivo', 'Modelo', 'Numero de serie'],
                        hiddenFields: ['DataPlus']
                    });
            } else {
                toastr.error("Debe de especificar tipo de dispositivo para continuar");
            }
        }

        function guardar() {
            swal({
                title: "Desasignar",
                text: "Esta seguro que desea desasignar este equipo ?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Si, adelante!",
                cancelButtonText: "No, cancelar!",
                closeOnConfirm: true
            }, function () {
                procesarSolicitud();
            });
        }

        function cargarArchivos() {
            $.ajax({
                url: '@Url.Action("LoadAttachmentFiles", "Computing")?id=' + $('#RequestId').val().trim(),
                type: "POST",
                data: "",
                dataType: "JSON",
                contentType: "application/json",
                success: function (result) {
                    attachmentFiles = result;
                    if (attachmentFiles.length > 0) {
                        var $ul = $('<ul class="list-unstyled file-list" />');
                        $.each(attachmentFiles, function (i, val) {
                            var $li = $('<li/>');
                            var $a = $('<a href="@Url.Action("Download", "Computing")?id=' + $('#RequestId').val().trim() + '&FileName=' + val.trim() + '" />')
                            var $delete = $('<a href="#" />')
                            $a.append($('<i class="fa fa-file-pdf-o" />'));
                            $delete.html("&nbsp; &nbsp; &nbsp;");
                            $delete.click(function (e) {
                                e.preventDefault();
                                eliminarArchivo(val.trim());
                            });
                            $delete.append($('<i class="fa fa-remove fa-2x" />'));
                            $li.append($a.html("  " + val));
                            $li.append($delete);
                            $ul.append($li);
                        });
                        $('#attachmentFiles').html($ul);
                    }
                    else {
                        $('#attachmentFiles').html('');
                    }
                }
            });
        }

        function atacharArchivo() {
            var data = new FormData();
            data.append("FileData", document.getElementById("FileData").files[0]);
            data.append("id", $('#RequestId').val());

            $.ajax({
                url: '@Url.Action("AttachFile", "Computing")',
                type: "POST",
                data: data,
                dataType: "JSON",
                contentType: false,
                processData: false,
                success: function (d) {
                    if (d.status == true) {
                        $('#attachmentForm').each(function () {
                            this.reset();
                        });
                        toastr.success('Archivo adjuntado correctamente', 'Adjuntos')
                        cargarArchivos();
                    }
                    else {
                        alert('Ha ocurrido un error');
                    }
                    $('#submit').val('Guardar');
                },
                error: function () {
                    alert('Error. Por favor trate de nuevo.');
                    $('#submit').val('Guardar');
                }
            });
        }

        function eliminarArchivo(fileName) {
            swal({
                title: "Eliminar",
                text: "Esta seguro que desea eliminar este archivo ?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Si, proceder!",
                cancelButtonText: "No, cancelar!",
                closeOnConfirm: false
            }, function () {
                $.ajax({
                    url: '@Url.Action("DeleteFile", "Computing")?id=' + $('#RequestId').val().trim() + "&fileName=" + fileName,
                    type: "POST",
                    dataType: "JSON",
                    contentType: false,
                    processData: false,
                    success: function (d) {
                        if (d.status == "OK") {
                            toastr.success('Archivo eliminado correctamente', 'Adjuntos');
                            cargarArchivos();
                        }
                        else {
                            swal({
                                title: "ERROR",
                                text: d.status,
                                type: "error"
                            });
                        }
                    }
                });
            });
        }

        function procesarSolicitud() {
            var isAllValid = true;

            if ($('#RequestId').val().trim() == '') {
                toastr.error('Debe de especificar un codigo', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#DeviceSimCard').val().trim() == '') {
                toastr.error('Debe de especificar un dispositivo', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#DeviceType').val().trim() == '') {
                toastr.error('Debe de especificar un tipo de dispositivo', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#Reason').val().trim() == '') {
                toastr.error('Debe de especificar un motivo', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#EmployeeId').val().trim() == '') {
                toastr.error('Debe de especificar un asignado a', 'Campos requeridos')
                isAllValid = false;
            }

            if (isAllValid) {
                $.ajax({
                    url: '@Url.Action("SaveEquipmentUnassign", "Computing")',
                    type: "POST",
                    data: $('#form').serialize(),
                    success: function (result) {
                        if (result.status == "OK")
                            window.location.href = "@Url.Action("EquipmentUnassignIndex","Computing")";
                        else
                            swal({
                                title: "ERROR",
                                text: result.status,
                                type: "error"
                            });
                    }
                });
            }
        }

        function imprimir() {
            var url = '@Url.Content("~/PDF/Reportes/")EquipmentUnassignReport.pdf';
            toastr.info('Estamos procesando su solicitud', 'Por favor espere')
            $.ajax({
                url: '@Url.Action("EquipmentUnassignReport", "Computing")?id=' + $('#RequestId').val(),
                type: "POST",
                data: "",
                cache: false,
                dataType: "JSON",
                contentType: "application/json",
                success: function (result) {
                    if (result.status === "OK")
                        window.open(url);
                    else
                        swal({
                            title: "ERROR",
                            text: result.status,
                            type: "error"
                        });

                }
            });
        }
    </script>
}
