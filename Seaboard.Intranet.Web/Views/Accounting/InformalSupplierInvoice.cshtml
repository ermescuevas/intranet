@using Seaboard.Intranet.Domain
@model Seaboard.Intranet.Domain.Models.AccountingInvoiceHeader
@{
    Layout = "~/Views/Shared/_AccountingLayout.cshtml";
    ViewBag.Title = "Proveedor informal";
    var taxes = (List<Seaboard.Intranet.Domain.ViewModels.Lookup>)ViewBag.Taxes;
    var voidTypes = (List<Seaboard.Intranet.Domain.ViewModels.Lookup>)ViewBag.VoidTypes;
}

<style>
    .selected {
        background-color: #e0f3ff;
    }

    .notAvailable {
        background-color: #f5efb5;
    }

    .bootstrap-select:not([class*=col-]):not([class*=form-control]):not(.input-group-btn) {
        width: 100%;
    }

    .invoice-total > tbody > tr > td:last-child {
        width: 50%;
    }
</style>

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <br />
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home")">Inicio</a>
            </li>
            <li>
                <a href="@Url.Action("InformalSupplierInvoiceIndex", "Accounting")">Listado de facturas</a>
            </li>
            <li class="active">
                <strong>Proveedor informal</strong>
            </li>
        </ol>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="wrapper wrapper-content animated fadeInUp">
                <div class="ibox">
                    <div class="ibox-content">
                        <div class="row m-t-sm">
                            <div class="col-lg-12">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="m-b-md">
                                            <div class="btn-group-xs pull-right">
                                                @if (Model.Status < 2)
                                                {
                                                    <button class="btn btn-info btn-xs" onclick="postInvoice();">Registrar</button>
                                                    <button class="btn btn-success btn-xs" onclick="saveInvoice();">Guardar en borrador</button>
                                                }
                                                @if (Model.Status != 3)
                                                {
                                                    <button class="btn btn-danger btn-xs" onclick="eliminar();">@(Model.Status == 1 ? "Eliminar" : "Anular")</button>
                                                }
                                                @if (Model.Status != 0)
                                                {

                                                    <button class="btn btn-primary btn-xs" onclick="imprimir();">Imprimir</button>
                                                }
                                            </div>
                                            @if (Model.Status == 2)
                                            {
                                                <div class=" btn-group-xs pull-left">
                                                    <h1>REGISTRADA</h1>
                                                </div>
                                            }
                                            @if (Model.Status == 3)
                                            {
                                                <div class=" btn-group-xs pull-left">
                                                    <h1>ANULADA</h1>
                                                    <button class="btn btn-success btn-xs" onclick="verMotivo();">Ver Motivo</button>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="wrapper wrapper-content animated fadeInRight">
                                    @Html.HiddenFor(x => x.Status)
                                    <div class="row">
                                        <div class="col-sm-8">
                                            <h1>Factura Proveedor informal</h1>
                                            <div class="form-group col-md-4">
                                                <label>Proveedor:</label>
                                                @if (string.IsNullOrEmpty(Model.SupplierNumber))
                                                {
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(m => m.SupplierNumber, new { @class = "form-control", @readonly = "readonly" })
                                                        <span class="input-group-btn">
                                                            <button id="lookupSuplidor" type="button" class="btn btn-primary">
                                                                <i class="fa fa-search"></i>
                                                            </button>
                                                        </span>
                                                    </div>
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(m => m.SupplierNumber, new { @class = "form-control", @readonly = "readonly" })
                                                }
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label>Fecha documento:</label>
                                                <div class="input-group">
                                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                    @Html.TextBoxFor(m => m.DocumentDate, new { @class = "form-control", Value = Model.DocumentDate.ToString("MM/dd/yyyy") })
                                                </div>
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label>Moneda:</label>
                                                <div class="input-group">
                                                    @Html.TextBoxFor(m => m.CurrencyId, new { @class = "form-control", @readonly = "readonly" })
                                                    <span class="input-group-btn">
                                                        <button id="lookupMoneda" type="button" class="btn btn-primary">
                                                            <i class="fa fa-search"></i>
                                                        </button>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-4 text-right">
                                            <h2>No. documento</h2>
                                            <h3 class="text-navy">@Model.DocumentNumber</h3>
                                            <h4 class="text-navy">NCF: @Model.Ncf</h4>
                                            <h5>@Model.NcfType</h5>
                                            <h5>Valida hasta: @Model.NcfDueDate.ToString("dd/MM/yyyy")</h5>
                                        </div>
                                    </div>
                                    <br />
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <h3>Datos proveedor</h3>
                                            <address id="Address">
                                                <strong>@(Model.SupplierName ?? "")</strong><br>
                                                @(Model.Address ?? "")<br>
                                                @(Model.City ?? ""), @(Model.Country ?? "")<br />
                                                @if (!string.IsNullOrEmpty(Model.PhoneNumber))
                                                {<abbr title="phone"> Tel:</abbr> @(Model.PhoneNumber ?? "")}<br />
                                            </address>
                                        </div>

                                        <div class="col-sm-6 text-right">
                                            <h3>Datos contribuyente</h3>
                                            <address>
                                                <strong>Transcontinental Capital Corporation, Inc.</strong><br>
                                                Av. La Marina, Muelle Timbeque,<br>
                                                Santo Domingo, Republica Dominicana<br />
                                                <abbr title="phone">Tel:</abbr> (809) 687-0101<br />
                                                <abbr title="fax">Fax:</abbr> (809) 685-5145
                                            </address>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12 col-lg-12 col-sm-12 text-center">
                                            <div class="table-responsive m-t" id="itemRows">
                                                <table class="table table-stripped" id="itemTable">
                                                    <thead>
                                                        <tr>
                                                            <th style="width:50%">Descripción</th>
                                                            <th style="width:10%">Cantidad</th>
                                                            <th style="width:13%">Precio Unit.</th>
                                                            <th style="width:10%">Impuesto</th>
                                                            <th style="width:14%">Total</th>
                                                            <th style="width:3%"></th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var item in Model.Details)
                                                        {
                                                            <tr>
                                                                <td><input type="text" class="form-control" value="@item.ItemDescription" /></td>
                                                                <td><input type="text" class="form-control" value="@item.Quantity.ToString("N0")" /></td>
                                                                <td><input type="text" class="form-control" value="@item.Price.ToString("N2")" /></td>
                                                                <td><input type="text" class="form-control" readonly="readonly" value="@item.TaxAmount.ToString("N2")" /></td>
                                                                <td><input type="text" class="form-control" readonly="readonly" value="@item.Total.ToString("N2")" /></td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                            @if (Model.Status < 2)
                                            {
                                                <button class="btn btn-success btn-rounded" data-toggle="modal" data-target="#modal-AddItem">Agregar servicio</button>
                                            }
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="hr-line-dashed"></div>

                                        <div class="col-lg-5">
                                            <label>Notas adicionales</label>
                                            <div class="form-group">
                                                <textarea rows="5" id="Note" class="form-control">@Model.Note</textarea>
                                            </div>
                                        </div>
                                        <div class="col-lg-7">
                                            <table class="table invoice-total">
                                                <tbody>
                                                    <tr>
                                                        <td><strong>SubTotal :</strong></td>
                                                        <td id="Subtotal">@Model.Subtotal.ToString("C2")</td>
                                                    </tr>
                                                    <tr>
                                                        <td><strong>Impuesto :</strong></td>
                                                        <td id="TaxAmount">@Model.TaxAmount.ToString("C2")</td>
                                                    </tr>
                                                    <tr>
                                                        <td><strong>Total :</strong></td>
                                                        <td id="Total">@Model.TotalAmount.ToString("C2")</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="modal-AddItem" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Agregar servicio</h4>
            </div>

            <div class="modal-body">
                <div class="form-group">
                    <label>Descripcion:</label>
                    <input name="ItemDescription" id="ItemDescription" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Cantidad:</label>
                    <input name="Quantity" id="Quantity" type="number" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Impuesto %:</label>
                    <select class="selectpicker" data-live-search="true" id="TaxPercent" name="TaxPercent">
                        <option value=""></option>
                        @foreach (var item in taxes)
                        {
                            <option value="@item.Id.Trim()">@(item.Descripción)</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label>Precio:</label>
                    <input name="Price" id="Price" type="number" class="form-control" />
                </div>
            </div>

            <div class="modal-footer">
                <div class="form-actions no-color">
                    <button type="button" class="btn btn-primary" onclick="agregarArticulo();"> Agregar</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal"> Cancelar</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="modal-VoidInvoice" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Anular factura</h4>
            </div>

            <div class="modal-body">
                <div class="form-group">
                    <label>Tipo anulacion:</label>
                    <select class="selectpicker" data-live-search="true" id="VoidType" name="VoidType">
                        <option value=""></option>
                        @foreach (var item in voidTypes)
                        {
                            <option value="@item.Id.Trim()">@(item.Descripción)</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label>Motivo</label>
                    <textarea class="form-control" rows="4" id="VoidReason"></textarea>
                </div>
            </div>

            <div class="modal-footer">
                <div class="form-actions no-color">
                    @if (Model.Status != 3)
                    {
                        <button type="button" class="btn btn-primary" onclick="anularFactura();"> Anular</button>
                    }
                    <button type="button" class="btn btn-primary" data-dismiss="modal"> Cancelar</button>
                </div>
            </div>
        </div>
    </div>
</div>


@section Styles {
    @Styles.Render("~/plugins/wizardStepsStyles")
    @Styles.Render("~/plugins/toastrStyles")
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/clockpickerStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/switcheryStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/nouiSliderStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
    @Styles.Render("~/plugins/imagecropperStyles")
    @Styles.Render("~/Content/plugins/colorpicker/colorpickerStyles")
    @Styles.Render("~/plugins/select2Styles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/plugins/tagInputsStyles")
    @Styles.Render("~/plugins/duallistStyles")
    @Styles.Render("~/plugins/sweetAlertStyles")
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/laddaStyles")
    <link href="@Url.Content("~/Content/plugins/lookupbox/lookupbox.css")" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.1/css/bootstrap-select.min.css">
}

@section Scripts {
    @Scripts.Render("~/Scripts/plugins/jquery-ui/jquery-ui.min.js")
    @Scripts.Render("~/plugins/wizardSteps")
    @Scripts.Render("~/plugins/validate")
    @Scripts.Render("~/plugins/toastr")
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/ionRange")
    @Scripts.Render("~/plugins/nouiSlider")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/switchery")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/knob")
    @Scripts.Render("~/plugins/imagecropper")
    @Scripts.Render("~/plugins/colorpicker")
    @Scripts.Render("~/plugins/clockpicker")
    @Scripts.Render("~/plugins/dateRange")
    @Scripts.Render("~/plugins/select2")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/tagInputs")
    @Scripts.Render("~/plugins/duallist")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/Scripts/plugins/lookupbox/jquery.lookupbox.js")
    @Scripts.Render("~/plugins/sweetAlert")
    @Scripts.Render("~/plugins/ladda")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.1/js/bootstrap-select.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.1/js/i18n/defaults-en_US.js"></script>

    <script type="text/javascript">
        var items = [];
        $(document).ready(function () {
            $('#Note').EnsureMaxLength({
                limit: 2000,
                cssClass: '',
                separator: '/',
                placement: null
            });
            $('#Description').EnsureMaxLength({
                limit: 101,
                cssClass: '',
                separator: '/',
                placement: null
            });
            $('#DocumentDate').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true
            });
            $('.ladda-button').ladda();
            $.formattedDate = function (dateToFormat) {
                var dateObject = new Date(dateToFormat);
                var day = dateObject.getDate();
                var month = dateObject.getMonth() + 1;
                var year = dateObject.getFullYear();
                day = day < 10 ? "0" + day : day;
                month = month < 10 ? "0" + month : month;
                var formattedDate = month + "/" + day + "/" + year;
                return formattedDate;
            };
            $("#lookupMoneda").lookupbox({
                title: 'Busqueda:',
                url: '@Url.Action("ListLookup", "Home")?tipo=5&consulta=',
                imgLoader: '<img src="~/Images/ajaxloader.gif">',
                width: 800,
                height: 1000,
                onItemSelected: function(data) {
                    $('input[name=CurrencyId]').val(data.Id);
                },
                tableHeader: ['Id. de moneda', 'Descripción'],
                hiddenFields: ['DataExtended','DataPlus']
            });
            $("#lookupSuplidor").lookupbox({
                title: 'Busqueda:',
                url: '@Url.Action("GetSupplierLookup", "Accounting")?consulta=',
                imgLoader: '<img src="~/Images/ajaxloader.gif">',
                width: 800,
                height: 1000,
                onItemSelected: function(data) {
                    $('input[name=SupplierNumber]').val(data.Id);
                    getSupplierData(data.Id);
                },
                tableHeader: ['Id. de proveedor', 'Nombre'],
                hiddenFields: ['DataExtended','DataPlus']
            });
            $('#Quantity').val('1');
            items = @Html.Raw(Json.Encode(Model.Details));
            getItems();
        });

        window.onbeforeunload = function () { $.ajax({ url: '@Url.Action("UnblockSecuence", "Accounting", new { id = Model.DocumentNumber})' }).done(function () { }); }

        function getSupplierData(id) {
            $.ajax({
                url: '@Url.Action("GetSupplierData", "Accounting")?vendorId=' + id,
                type: "POST",
                data: "",
                cache: false,
                dataType: "JSON",
                contentType: "application/json",
                success: function (result) {
                    if (result.status === "OK") {
                        $('#Address').html('<strong>' + result.lookup.CustomerName + '</strong><br />' + result.lookup.CustomerAddress + '<br />' + result.lookup.City + ', ' + result.lookup.Contact + '<br /><abbr title="phone"> Tel:</abbr> ' + result.lookup.CurrencyId);
                    } else {
                        swal({
                            title: "ERROR",
                            text: result.status,
                            type: "error"
                        });
                    }
                }
            });
        }

        function verMotivo() {
            $.ajax({
                url: '@Url.Action("GetVoidReasonInfo", "Accounting")?id=' + '@Model.DocumentNumber',
                type: "POST",
                data: "",
                cache: false,
                dataType: "JSON",
                contentType: "application/json",
                success: function (result) {
                    if (result.status === "OK") {
                        $('#modal-VoidInvoice').modal('show');
                        $('#VoidReason').val(result.lookup.Descripción);
                        $('select[name=VoidType]').val(result.lookup.Id);
                        $('.selectpicker').selectpicker('refresh');
                    } else {
                        swal({
                            title: "ERROR",
                            text: result.status,
                            type: "error"
                        });
                    }
                }
            });
        }

        function agregarArticulo() {
            var isAllValid = true;
            if ($('#Quantity').val() === '') {
                toastr.error('Por favor debe de especificar una cantidad para procesar', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#Price').val() === '') {
                toastr.error('Por favor debe de un precio para procesar', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#ItemDescription').val() === '') {
                toastr.error('Por favor debe de una descripcion para procesar', 'Campos requeridos')
                isAllValid = false;
            }

            if (isAllValid) {
                items.push({
                    SopNumber: '',
                    LineNumber: 0,
                    ItemNumber: '',
                    ItemDescription: $('#ItemDescription').val().trim(),
                    Quantity: parseInt($('#Quantity').val().trim()),
                    Price: parseFloat($('#Price').val().trim()),
                    TaxAmount: $('#TaxPercent').val().trim() === '' ? 0 : (parseFloat($('#TaxPercent').val().trim()) / 100) * parseFloat($('#Price').val().trim()),
                    Total: ($('#TaxPercent').val().trim() === '' ? parseFloat($('#Price').val().trim()) : (1 + parseFloat($('#TaxPercent').val().trim()) / 100) * parseFloat($('#Price').val().trim())) * parseInt($('#Quantity').val().trim())
                });
                getItems();
                $('#ItemDescription').val('');
                $('#Quantity').val('1');
                $('#Price').val('');
                $('select[name=TaxPercent]').val('');
                $('select[name=TaxPercent]').selectpicker('refresh');
                $('#modal-AddItem').modal('hide');
            }
        }

        function getItems() {
            var $table = $('<table class="table table-stripped" id="itemTable"/>');
            var thead = '<thead>' +
                '<tr>' +
                '<th style="width:50%">Descripción</th>' +
                '<th style="width:10%">Cantidad</th>' +
                '<th style="width:13%">Precio Unit.</th>' +
                '<th style="width:10%">Impuesto</th>' +
                '<th style="width:14%">Total</th>' +
                '<th style="width:3%"></th>' +
                '</tr>' +
                '</thead>';
            $table.append(thead);
            var $tbody = $('<tbody/>');
            $.each(items,
                function (x, item) {
                    var $row = $('<tr/>');
                    var $remove = $('<button class="btn btn-rounded btn-default"><i class="fa fa-remove"></i></button>');
                    var $itemDescription = $('<input type="text" class="form-control" />');
                    var $itemQuantity = $('<input type="text" class="form-control" />');
                    var $itemUnitPrice = $('<input type="text" class="form-control" />');
                    var $itemTaxAmount = $('<input type="text" class="form-control" readonly="readonly" />');
                    var $itemTotal = $('<input type="text" class="form-control" readonly="readonly" />');
                    $row.append($('<td/>').html($itemDescription.val(item.ItemDescription)));
                    $row.append($('<td/>').html($itemQuantity.val(item.Quantity)));
                    $row.append($('<td/>').html($itemUnitPrice.val(parseFloat(item.Price).toFixed(2).replace(/./g, function (c, i, a) {
                        return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                    }))));
                    $row.append($('<td/>').html($itemTaxAmount.val(parseFloat(item.TaxAmount).toFixed(2).replace(/./g, function (c, i, a) {
                        return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                    }))));
                    $row.append($('<td/>').html($itemTotal.val(parseFloat(item.Total).toFixed(2).replace(/./g, function (c, i, a) {
                        return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                    }))));
                    $row.append($('<td/>').html($remove));
                    $($itemQuantity).focusout(function () {
                        var total = parseFloat(parseFloat($itemQuantity.val().replace(/,/g, "")) * parseFloat(parseFloat($itemUnitPrice.val().replace(/,/g, "")) + parseFloat($itemTaxAmount.val().replace(/,/g, "")))).toFixed(2).replace(/./g, function (c, i, a) {
                            return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                        });
                        $itemTotal.val(total);
                        sumLines();
                    });
                    $($itemUnitPrice).focusout(function () {
                        var total = parseFloat(parseFloat($itemQuantity.val().replace(/,/g, "")) * parseFloat(parseFloat($itemUnitPrice.val().replace(/,/g, "")) + parseFloat($itemTaxAmount.val().replace(/,/g, "")))).toFixed(2).replace(/./g, function (c, i, a) {
                            return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                        });
                        $itemTotal.val(total);
                        sumLines();
                    });
                    $itemDescription.EnsureMaxLength({
                        limit: 101,
                        cssClass: '',
                        separator: '/',
                        placement: null
                    });
                    $tbody.append($row);
                    $remove.click(function () {
                        if (@Model.Status < 2) {
                            deleteRow(item.ItemDescription, item.Quantity, item.Price);
                            getItems();
                        }
                    });
                });
            $table.append($tbody);
            $('#itemRows').html($table);
            sumLines();
        }

        function sumLines() {
            var price = 0;
            var taxAmount = 0;
            var total = 0;
            $('#itemTable > tbody > tr').each(function () {
                price += (parseFloat($(this).find('td:eq(2) input').val().trim().replace(/,/g, "")) * parseFloat($(this).find('td:eq(1) input').val().trim().replace(/,/g, "")));
                taxAmount += (parseFloat($(this).find('td:eq(3) input').val().trim().replace(/,/g, "")) * parseFloat($(this).find('td:eq(1) input').val().trim().replace(/,/g, "")));
                total += parseFloat($(this).find('td:eq(4) input').val().trim().replace(/,/g, ""));
            });
            $('#Subtotal').html(parseFloat(price).toFixed(2).replace(/./g, function (c, i, a) {
                return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
            }));
            $('#TaxAmount').html(parseFloat(taxAmount).toFixed(2).replace(/./g, function (c, i, a) {
                return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
            }));
            $('#Total').html(parseFloat(total).toFixed(2).replace(/./g, function (c, i, a) {
                return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
            }));
        }

        function deleteRow(description, quantity, price) {
            swal({
                title: "Eliminar",
                text: "Esta seguro que desea eliminar este registro ?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Si, adelante!",
                cancelButtonText: "No, cancelar!",
                closeOnConfirm: true
            }, function () {
                for (var i = 0; i < items.length; i++) {
                    if (items[i].ItemDescription === description && items[i].Quantity === quantity && items[i].Price === price) {
                        items.splice(i, 1);
                        getItems();
                        break;
                    }
                }
            });
        }

        function eliminar() {
            var voidText = "";
            var voidTitle = "";
            if (@Model.Status === 2) {
                voidText = "Esta seguro que desea anular este registro ?";
                voidTitle = "Anulacion";
            } else {
                voidText = "Esta seguro que desea eliminar este registro ?";
                voidTitle = "Eliminar";
            }
            swal({
                title: voidTitle,
                text: voidText,
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Si, adelante!",
                cancelButtonText: "No, cancelar!",
                closeOnConfirm: true
            }, function () {
                if (@Model.Status !== 2) {
                    $.ajax({
                        url: '@Url.Action("VoidInvoice", "Accounting")?id=' + '@Model.DocumentNumber',
                        type: "POST",
                        data: '',
                        dataType: "JSON",
                        cache: false,
                        contentType: "application/json",
                        success: function (result) {
                            if (result.status === "OK")
                                window.location.href = '@Url.Action("InformalSupplierInvoiceIndex","Accounting")';
                            else
                                swal({
                                    title: "ERROR",
                                    text: result.status,
                                    type: "error"
                                });
                        }
                    });
                }
                else {
                    $('#modal-VoidInvoice').modal('show');
                    $('#VoidReason').val('');
                    $('select[name=VoidType]').val('');
                    $('.selectpicker').selectpicker('refresh');
                }
            });
        }

        function anularFactura() {
            var isAllValid = true;
            if ($('#VoidType').val() === '') {
                toastr.error('Por favor debe de especificar un tipo de anulacion para procesar', 'Campos requeridos')
                isAllValid = false;
            }
            if ($('#VoidReason').val() === '') {
                toastr.error('Por favor debe de especificar un motivo para procesar', 'Campos requeridos')
                isAllValid = false;
            }
            if (isAllValid) {
                var data = {
                    id: '@Model.DocumentNumber',
                    voidReason: $('#VoidType').val(),
                    reason: $('#VoidReason').val()
                }
                $.ajax({
                    url: '@Url.Action("VoidInvoice", "Accounting")',
                    type: "POST",
                    data: JSON.stringify(data),
                    dataType: "JSON",
                    cache: false,
                    contentType: "application/json",
                    success: function (result) {
                        if (result.status === "OK")
                            window.location.href = '@Url.Action("InformalSupplierInvoiceIndex","Accounting")';
                        else
                            swal({
                                title: "ERROR",
                                text: result.status,
                                type: "error"
                            });
                    }
                });
            }
        }

        function postInvoice() {
            swal({
                title: "Registrar",
                text: "Esta seguro que desea registrar este documento",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Si, adelante!",
                cancelButtonText: "No, cancelar!",
                closeOnConfirm: false
            }, function () {
                $('#Status').val(2);
                procesarSolicitud();
            });
        }

        function saveInvoice() {
            $('#Status').val(1);
            procesarSolicitud();
        }

        function procesarSolicitud() {
            var isAllValid = true;
            if ($('#DocumentDate').val() === '') {
                toastr.error('Por favor debe de especificar una fecha de documento para procesar', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#SupplierNumber').val() === '') {
                toastr.error('Por favor debe de especificar un proveedor para procesar', 'Campos requeridos')
                isAllValid = false;
            }

            if ($('#CurrencyId').val() === '') {
                toastr.error('Por favor debe de especificar una moneda para procesar', 'Campos requeridos')
                isAllValid = false;
            }

            if (items.length == 0) {
                toastr.error('Debe  de especificar al menos un articulo para procesar', 'Campos requeridos')
                isAllValid = false;
            }
            if (isAllValid) {
                var data = {
                    DocumentNumber: '@Model.DocumentNumber',
                    DocumentDate: $('#DocumentDate').val(),
                    SupplierNumber: $('#SupplierNumber').val().trim(),
                    Note: $('#Note').val().trim(),
                    Ncf: '@Model.Ncf',
                    NcfType: '@Model.NcfType',
                    NcfDueDate: '@Model.NcfDueDate',
                    CurrencyId: $('#CurrencyId').val().trim(),
                    Subtotal: parseFloat($('#Subtotal').html().replace(/,/g, "")),
                    TaxAmount: parseFloat($('#TaxAmount').html().replace(/,/g, "")),
                    TotalAmount: parseFloat($('#Total').html().replace(/,/g, "")),
                    DocumentType: 11,
                    ExpenseType: 9,
                    Details: items,
                    Status: parseInt($('#Status').val())
                }
                $.ajax({
                    url: '@Url.Action("SaveInvoice", "Accounting")',
                    type: "POST",
                    data: JSON.stringify(data),
                    dataType: "JSON",
                    cache: false,
                    contentType: "application/json",
                    success: function (result) {
                        if (result.status === "OK") {
                            if (parseInt($('#Status').val()) === 2) {
                                swal({
                                    title: "Imprimir",
                                    text: "Desea imprimir el documento ?",
                                    type: "warning",
                                    showCancelButton: true,
                                    confirmButtonColor: "#DD6B55",
                                    confirmButtonText: "Si, adelante!",
                                    cancelButtonText: "No, cancelar!",
                                    closeOnConfirm: true
                                }, function (confirm) {
                                    if (confirm)
                                        imprimir(true);
                                    else
                                        window.location.href = '@Url.Action("InformalSupplierInvoiceIndex","Accounting")';
                                });
                            }
                            else
                                window.location.href = '@Url.Action("InformalSupplierInvoiceIndex","Accounting")';
                        }
                        else
                            swal({
                                title: "ERROR",
                                text: result.status,
                                type: "error"
                            });
                    }
                });
            }
        }

        function imprimir(redirect = false) {
            var url = '@Url.Content("~/PDF/Reportes/")InformalSupplierInvoiceReport.pdf';
            toastr.info('Estamos procesando su solicitud', 'Por favor espere')
            $.ajax({
                url: '@Url.Action("InformalSupplierInvoiceReport", "Accounting")?id=' + '@Model.DocumentNumber',
                type: "POST",
                data: "",
                cache: false,
                dataType: "JSON",
                contentType: "application/json",
                success: function (result) {
                    if (result.status === "OK") {
                        window.open(url);
                        if (redirect)
                            window.location.href = '@Url.Action("InformalSupplierInvoiceIndex","Accounting")';
                    }
                    else
                        swal({
                            title: "ERROR",
                            text: result.status,
                            type: "error"
                        });

                }
            });
        }
    </script>
}