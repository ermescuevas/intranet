@{
    Layout = "~/Views/Shared/_BillingLayout.cshtml";
    ViewBag.Title = "Reporte protocolo de neteo transacciones MEM";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Reporte protocolo de neteo transacciones MEM</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home")">Inicio</a>
            </li>
            <li class="active">
                <strong>Reporte protocolo de neteo transacciones MEM</strong>
            </li>
        </ol>
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="wrapper wrapper-content animated fadeInUp">
            <div class="row">
                <div class="col-lg-12">
                    <div class="ibox float-e-margins">
                        <div class="ibox-title">
                            <h3>Reporte protocolo de neteo transacciones MEM</h3>
                        </div>
                        <div class="ibox-content">
                            <div class="col-sm-12 col-sm-offset-1">
                                <button class="btn btn-success" type="button" data-toggle="modal" data-target="#modal-Print"><i class="fa fa-print"></i> Imprimir</button>
                                <button class="ladda-button btn btn-primary" data-style="expand-right" type="button" id="searchData" onclick="consultar();"><i class="fa fa-search"></i> Consultar</button>
                                <button class="ladda-button btn btn-danger" data-style="expand-right" type="button" id="updateData" onclick="actualizar();"><i class="fa fa-refresh"></i> Actualizar</button>
                                <button class="btn btn-info" type="button" onclick="guardar();"><i class="fa fa-save"></i> Guardar cambios</button>
                            </div>
                            <br />
                        </div>
                    </div>
                </div>
            </div>
            <div class="ibox">
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label>Mes facturacion:</label>
                                <div class="col-sm-12 input-group">
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    <input id="BillingMonth" name="BillingMonth" class="form-control" />
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-9">
                            <div class="form-group">
                                <label>Preliminar:</label>
                                <div class="col-sm-2 input-group">
                                    <input type="checkbox" class="js-switch" id="Preliminar" name="Preliminar" />
                                </div>
                            </div>
                            <div class="row" id="preliminarData" style="display:none">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Ruta archivo</label>
                                        <form id="form-" method="post" enctype="multipart/form-data" accept-charset="utf-8">
                                            <div class="fileinput fileinput-new input-group" data-provides="fileinput">
                                                <div class="form-control" data-trigger="fileinput"><i class="glyphicon glyphicon-file fileinput-exists"></i> <span class="fileinput-filename"></span></div>
                                                <span class="input-group-addon btn btn-default btn-file">
                                                    <span class="fileinput-new"><i class="fa fa-folder-o"></i></span><span class="fileinput-exists"><i class="fa fa-folder-open"></i></span>
                                                    <input accept=".xlsx, .xls, .xlsm" type="file" name="FileData" id="FileData">
                                                </span>
                                                <a href="#" class="input-group-addon btn btn-default fileinput-exists" id="delete" data-dismiss="fileinput">Borrar</a>
                                            </div>
                                        </form>
                                    </div>
                                </div>


                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>No. de resolución:</label>
                                        <input type="text" name="ResolutionNumber" id="ResolutionNumber" class="form-control" />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Fecha de vencimiento:</label>
                                        <div class="col-sm-12 input-group date">
                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                            <input type="text" name="DueDate" id="DueDate" class="form-control" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="hr-line-dashed"></div>
                    <div class="table-responsive" id="invoiceRows"></div>
                </div>
            </div>
        </div>
    </div>
    <div id="modal-Print" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="myModalLabel">Imprimir</h4>
                </div>

                <div class="modal-body">
                    <p>Imprimir reporte</p>
                    <div class="form-group">
                        <label>Opción</label>
                        <select class="form-control" id="printOption" name="printOption">
                            <option value="10">PDF</option>
                            <option value="20">Excel</option>
                        </select>
                    </div>
                </div>

                <div class="modal-footer">
                    <div class="form-actions no-color">
                        <button type="button" class="btn btn-primary" onclick="imprimirReporte();"> Imprimir</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles{
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    <link href="@Url.Content("~/Content/plugins/lookupbox/lookupbox.css")" rel="stylesheet" type="text/css" />
    @Styles.Render("~/plugins/toastrStyles")
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/switcheryStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/sweetAlertStyles")
    @Styles.Render("~/plugins/laddaStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/Scripts/plugins/jquery-ui/jquery-ui.min.js")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/toastr")
    @Scripts.Render("~/Scripts/plugins/lookupbox/jquery.lookupbox.js")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/switchery")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/sweetAlert")
    @Scripts.Render("~/plugins/ladda")

    <script>
        $(document).ready(function () {
            $('.ladda-button').ladda();
        var elem = document.querySelector('.js-switch');
        switchery = new Switchery(elem, { color: '#1AB394' });
        $('.i-checks').iCheck({
            checkboxClass: 'icheckbox_square-green',
            radioClass: 'iradio_square-green',
        });
        $('#BillingMonth').datepicker({
            changeMonth: true,
            changeYear: true,
            showButtonPanel: true,
            format: 'mm/yyyy',
            onClose: function (dateText, inst) {
                $(this).datepicker('setDate', new Date(inst.selectedYear, inst.selectedMonth, 1));
            }
        });
        $('#BillingMonth').datepicker().datepicker("setDate", new Date());
        $('#DueDate').datepicker({
            changeMonth: true,
            changeYear: true,
            showButtonPanel: true,
            onClose: function (dateText, inst) {
                $(this).datepicker('setDate', new Date(inst.selectedYear, inst.selectedMonth, 1));
            }
        });
        $('#DueDate').datepicker().datepicker("setDate", new Date());
        $('#Preliminar').on('change', function () {
            if (this.checked === true) $('#preliminarData').css('display', '');
            else $('#preliminarData').css('display', 'none');
        });
        $('.informationTable').DataTable({
            pageLength: 10,
            dom: '<"html5buttons"B>lTfgitp',
            order: [[0, "desc"]],
            language: {
                "sProcessing": "Procesando... ",
                "sLengthMenu": "Mostrar _MENU_ registros",
                "sZeroRecords": "No se encontraron resultados",
                "sEmptyTable": "Ningún dato disponible en esta tabla",
                "sInfo":
                    "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros ",
                "sInfoEmpty":
                    "Mostrando registros del 0 al 0 de un total de 0 registros",
                "sInfoFiltered":
                    "(filtrado de un total de _MAX_ registros)",
                "sInfoPostFix": "",
                "sSearch": "Buscar:  ",
                "sUrl": "",
                "sInfoThousands": ",",
                "sLoadingRecords": "Cargando...",
                "oPaginate": {
                    "sFirst": "Primero",
                    "sLast": "Último",
                    "sNext": "Siguiente",
                    "sPrevious": "Anterior"
                }
            },
            oAria: {
                "sSortAscending":
                    ": Activar para ordenar la columna de manera ascendente",
                "sSortDescending":
                    ": Activar para ordenar la columna de manera descendente"
            },
            buttons: [
                { extend: 'copy' },
                { extend: 'csv' },
                { extend: 'excel', title: 'ExampleFile' },
                { extend: 'pdf', title: 'ExampleFile' },
                {
                    extend: 'print',
                    customize: function (win) {
                        $(win.document.body).addClass('white-bg');
                        $(win.document.body).css('font-size', '10px');

                        $(win.document.body).find('table')
                            .addClass('compact')
                            .css('font-size', 'inherit');
                    }
                }
            ]

        });
    });
    function imprimirReporte() {
        var isPreliminar = false;
        if ($('#Preliminar').is(':checked')) {
            isPreliminar = true;
        }
        var data = {
            billingMonth: ('01/' + $('#BillingMonth').datepicker({ dateFormat: 'ddMMyyyy' }).val()),
            isPreliminar: isPreliminar,
            printOption: parseInt($('#printOption').val())
        };

        var reportName = 'NetProtocolMemReport';
        if ($('#printOption').val() === '10')
            reportName += '.pdf';
        else
            reportName += '.xls';
        var url = '@Url.Content("~/PDF/Reportes/")' + reportName;

        toastr.info('Estamos procesando su solicitud', 'Por favor espere');
        $.ajax({
            url: '@Url.Action("NetProtocolMemReport", "AccountReceivables")',
            type: "POST",
            data: JSON.stringify(data),
            dataType: "JSON",
            async: false,
            cache: false,
            contentType: "application/json",
            success: function (d) {
                if (d.status === "OK") {
                    window.open(url);
                }
                else {
                    alert(d.status);
                }
            }
        });
    }
    function actualizar() {
        var isAllValid = true;
        var formdata;
        var isPreliminar = false;
        if ($('#BillingMonth').val().trim() == '') {
            toastr.error('Debe de especificar un mes de facturacion', 'Campos requeridos')
            isAllValid = false;
        }

        if ($('#Preliminar').is(':checked')) {
            isPreliminar = true;
            if ($('#ResolutionNumber').val().trim() == '') {
                toastr.error('Debe de especificar un numero de resolucion', 'Campos requeridos')
                isAllValid = false;
            }
            if ($('#DueDate').val().trim() == '') {
                toastr.error('Debe de especificar una fecha de vencimiento', 'Campos requeridos')
                isAllValid = false;
            }
            formdata = new FormData($('#form-')[0]);
            if (formdata === null) {
                toastr.info("Debe de especificar un archivo para poder procesarlo");
                isAllValid = false;
            }
        }

        if (isAllValid) {
            swal({
                title: "Actualizar",
                text: "Esta accion sobreescribira los datos introducidos desea continuar ?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Si, adelante!",
                cancelButtonText: "No, cancelar!",
                closeOnConfirm: isPreliminar
            }, function () {
                    $('#updateData').ladda('start');
                if (!isPreliminar) {
                    swal({
                        title: "Actualizar",
                        text: "Desea transferir los datos de estados de las transacciones preliminares ?",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: "Si, adelante!",
                        cancelButtonText: "No, cancelar!",
                        closeOnConfirm: true
                    }, function (willDelete) {
                        if (willDelete || !willDelete) {
                            $.ajax({
                                url: '@Url.Action("GetNetProtocolMemData", "AccountReceivables")?billingMonth=' + ('01/' + $('#BillingMonth').datepicker({ dateFormat: 'ddMMyyyy' }).val()) + '&resolutionNumber=' + $('#ResolutionNumber').val().trim() + '&dueDate=' + $('#DueDate').val().trim() + '&isPreliminar=' + isPreliminar + '&transferData=' + willDelete,
                                type: "POST",
                                data: formdata,
                                cache: false,
                                processData: false,
                                contentType: false,
                                success: function (result) {
                                    if (result.status === "OK") {
                                        consultar();
                                    } else {
                                        swal({
                                            title: "ERROR",
                                            text: result.status,
                                            type: "error"
                                        });
                                    }
                                    $('#updateData').ladda('stop');
                                }
                            });
                        }
                    });
                }
                else {
                    $.ajax({
                        url: '@Url.Action("GetNetProtocolMemData", "AccountReceivables")?billingMonth=' + ('01/' + $('#BillingMonth').datepicker({ dateFormat: 'ddMMyyyy' }).val()) + '&resolutionNumber=' + $('#ResolutionNumber').val().trim() + '&dueDate=' + $('#DueDate').val().trim() + '&isPreliminar=' + isPreliminar,
                        type: "POST",
                        data: formdata,
                        cache: false,
                        processData: false,
                        contentType: false,
                        success: function (result) {
                            if (result.status === "OK") {
                                consultar();
                            } else {
                                swal({
                                    title: "ERROR",
                                    text: result.status,
                                    type: "error"
                                });
                            }
                            $('#updateData').ladda('stop');
                        }
                    });
                }
            });
        }
    }
    function consultar() {
        var isAllValid = true;
        var isPreliminar = false;
        if ($('#BillingMonth').val().trim() == '') {
            toastr.error('Debe de especificar un mes de facturacion', 'Campos requeridos')
            isAllValid = false;
        }
        if ($('#Preliminar').is(':checked')) {
            isPreliminar = true;
        }

        if (isAllValid) {
            $('#searchData').ladda('start');
            $.ajax({
                url: '@Url.Action("NetProtocolMemList", "AccountReceivables")?billingMonth=' + ('01/' + $('#BillingMonth').datepicker({ dateFormat: 'ddMMyyyy' }).val()) + '&isPreliminar=' + isPreliminar,
                success: function (result) {
                    $('#invoiceRows').html(result);
                    $('.informationTable').DataTable({
                        pageLength: 50,
                        order: [[0, "desc"]],
                        dom: '<"html5buttons"B>lTfgitp',
                        language: {
                            "sProcessing": "Procesando... ",
                            "sLengthMenu": "Mostrar _MENU_ registros",
                            "sZeroRecords": "No se encontraron resultados",
                            "sEmptyTable": "Ningún dato disponible en esta tabla",
                            "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros ",
                            "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix": "",
                            "sSearch": "Buscar:  ",
                            "sUrl": "",
                            "sInfoThousands": ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst": "Primero",
                                "sLast": "Último",
                                "sNext": "Siguiente",
                                "sPrevious": "Anterior"
                            }
                        },
                        oAria: {
                            "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                            "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                        },
                        buttons: [
                            { extend: 'copy' },
                            { extend: 'csv' },
                            { extend: 'excel', title: 'ExampleFile' },
                            { extend: 'pdf', title: 'ExampleFile' },

                            {
                                extend: 'print',
                                customize: function (win) {
                                    $(win.document.body).addClass('white-bg');
                                    $(win.document.body).css('font-size', '10px');

                                    $(win.document.body).find('table')
                                        .addClass('compact')
                                        .css('font-size', 'inherit');
                                }
                            }
                        ]
                    });
                    $('#searchData').ladda('stop');
                }
            });
        }
    }
    function guardar() {
        var isPreliminar = false;
        if ($('#Preliminar').is(':checked')) {
            isPreliminar = true;
        }
        swal({
            title: "Guardar cambios",
            text: "Esta seguro que desea guardar los cambios realizados ?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Si, adelante!",
            cancelButtonText: "No, cancelar!",
            closeOnConfirm: true
        }, function () {
            $('#invoiceTable > tbody > tr').each(function () {
                $.ajax({
                    url: '@Url.Action("SaveNetProtocolMem", "AccountReceivables")?billingMonth=' + ('01/' + $('#BillingMonth').datepicker({ dateFormat: 'ddMMyyyy' }).val()) + '&isPreliminar=' + isPreliminar +
                        '&customerId=' + $(this).find('td:eq(1)').html().trim() + '&status=' + $(this).find('td:eq(6) select').val().trim(),
                    type: "POST",
                    dataType: "JSON",
                    cache: false,
                    contentType: "application/json",
                    success: function (result) {
                        if (result.status !== "OK")
                            swal({
                                title: "ERROR",
                                text: result.status,
                                type: "error"
                            });
                    }
                });
            });
            toastr.info("Datos guardados correctamente");
        });
    }
    </script>
}